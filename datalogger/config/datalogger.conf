#!/bin/bash

# This file is loaded for all user accounts and editing it
# is potentially dangerous. Any edits should be thoroughly
# thought out and tested.

# setting up data logger variables as environment variables
. /KWH/datalogger/config/vars

# building aliases
alias help="echo -e '================================================================================\n\
=           Welcome to the KWH RPi DAS Data Logger software package            =\n\
================================================================================\n\
\n\
These aliases and functions are available to simplify the use of this software\n\
\n\
This is a long \"echo\" statement that is piped into \"more\" to stop printing once\n\
the screen is full. Press enter to navigate down through the list or \"q\" to exit\n\
\n\
aconf (no arguments): \n \
  This will display the config values of all the analog input channels\n \
  i.e. whether they are enabled or disabled, 1 or 0\n \
\n\
aval (no arguments): \n \
  This displays the analog values that are currently on disk. These values\n \
  are only updated when /KWH/datalogger/adc/capture.py is run\n \
  This is also currently displaying the temp sensor values, but they will\n \
  soon be moved to their own config and value aliases, tconf and tval\n \
\n\
config (no arguments): \n \
  This displays all of the current config variables and their values\n \
\n\
defaults (no arguments): \n \
  This displays the default config that is used by the smsProcess code to\n \
  RESET the data logger to its default values\n \
\n\
denver (no arguments): \n \
  This sets the default config to the config for the Denver RPi Data Logger\n \
\n\
gitpush (no arguments): \n \
  This is only for the DAS Admin and is used to push new code directly to the\n \
  main repo on github\n \
\n\
help (no arguments): \n \
  Displays this help information\n \
\n\
helpconf (no arguments): \n \
  Displays a list of definitions for each config variable\n\
\n\
merge (no arguments): \n \
  This will download the new code from the main repo, and is required to be\n \
  abel to initiate a pull request with pullreq\n\
\n\
pconf (no arguments): \n \
  This will display the config values of all the pulse input channels\n \
  i.e. whether they are enabled or disabled, 1 or 0\n \
\n\
pullreq (no arguments): \n \
  This will initiate a pull request to the main repo\n \
\n\
pval (no arguments): \n \
  This displays the pulse values that are currently on disk. These values\n \
  are updated dynamically by the individual pulse readers that run at boot.\n \
\n\
readsms (no arguments): \n \
  This will read the sms memory from the SIM card and populate the log file\n \
  at /KWH/datalogger/transceive/sms/read.log\n \
\n\
reload (no arguments): \n \
  This will reload all environment variables, aliases, and functions by\n \
  sourcing the file /KWH/datalogger/config/datalogger.conf\n \
\n\
seattle (no arguments): \n \
  This sets the default config to the config for the Seattle RPi Data Logger\n \
\n\
sendsms <phone #> <A message>: \n \
  The message can have spaces. This will send an sms.\n \
  e.g. sendsms 4252681938 Hi Dave!\n \
\n\
setconf <config variable name> <config value>: \n \
  This is used to create new config variables or update existing config\n \
  variables. \n \
  e.g. setconf PORT 11002\n \
\n\
version (no arguments): \n \
  This displays the current version number, which is updated every time we\n \
  push new code to GitHub\n' | more"

alias sendsms="/KWH/datalogger/transceive/sms/smsSend.sh"
alias readsms="/KWH/datalogger/transceive/sms/smsRead.sh"
alias setconf=". /KWH/datalogger/config/setConf.sh"
alias reload=". /KWH/datalogger/config/datalogger.conf"
alias gitpush="/KWH/git/gitpush.sh"
alias pullreq="/KWH/git/pullreq.sh"
alias aconf="config | grep 'AD[0-9][0-9] [0-9]'"

alias pconf="config | grep 'PU[0-9][0-9] [0-9]'"

alias aval=" echo -n 'AD01: ' ; \
cat /KWH/datalogger/adc/AD01; printf '\nAD02: '; \
cat /KWH/datalogger/adc/AD02; printf '\nADO3: '; \
cat /KWH/datalogger/adc/AD03; printf '\nAD04: '; \
cat /KWH/datalogger/adc/AD04; printf '\nAD05: '; \
cat /KWH/datalogger/adc/AD05; printf '\nAD06: '; \
cat /KWH/datalogger/adc/AD06; printf '\nAD07: '; \
cat /KWH/datalogger/adc/AD07; printf '\nAD08: '; \
cat /KWH/datalogger/adc/AD08; printf '\nAD11: '; \
cat /KWH/datalogger/temperature/$TEMP1; printf '\nAD12: '; \
cat /KWH/datalogger/temperature/$TEMP2; printf '\nAD13: '; \
cat /KWH/datalogger/temperature/$TEMP3; echo ''"

alias pval="cat /KWH/datalogger/pulse/PU01; echo ''; \
cat /KWH/datalogger/pulse/PU02; echo ''; \
cat /KWH/datalogger/pulse/PU03; echo ''; \
cat /KWH/datalogger/pulse/PU04; echo ''; \
cat /KWH/datalogger/pulse/PU05; echo ''; \
cat /KWH/datalogger/pulse/PU06; echo ''; \
cat /KWH/datalogger/pulse/PU07; echo ''; \
cat /KWH/datalogger/pulse/PU08; echo ''"

alias seattle="
setconf PORT 11001;
setconf STA 99003;
setconf ADMPW 1111;
setconf TEMP1 28-0000087e4f5e;
setconf TEMP2 28-0000087de384;
setconf TEMP3 28-0000087d4613"

alias denver="setconf PORT 11002;
setconf STA 99002;
setconf TEMP1 28-0000087d1add;
setconf TEMP2 28-0000087e8b14;
setconf TEMP3 28-0000087edfac"

alias version="v1=`cat /KWH/datalogger/config/gitV1`
v2=`cat /KWH/datalogger/config/gitV2`
echo v${v1}.${v2}"

# building functions
function config(){
    files=$(ls /KWH/datalogger/config)
    for file in $files; do
        #exception files
        if [ $file = "defaults" ]; then continue; fi
        if [ $file = "pyvars.py" ]; then continue; fi
        if [ $file = "datalogger.conf" ]; then continue; fi
        if [ $file = "vars" ]; then continue; fi
        if [ $file = "VARS" ]; then continue; fi
        if [ $file = "sttySettings.tty" ]; then continue; fi
        if [ $file = "setConf.sh" ]; then continue; fi
        if [ $file = "SIM_LOCK" ]; then continue; fi
	if [ $file = "gitV1" ]; then continue; fi
	if [ $file = "gitV2" ]; then continue; fi
        #print config
        echo -n $file" "
        cat /KWH/datalogger/config/$file
	echo ""
    done
}

function defaults(){
    files=$(ls /KWH/datalogger/config/defaults)
    for file in $files; do
        #exception files
        if [ $file = "defaults" ]; then continue; fi
        if [ $file = "pyvars.py" ]; then continue; fi
        if [ $file = "datalogger.conf" ]; then continue; fi
        if [ $file = "vars" ]; then continue; fi
        if [ $file = "VARS" ]; then continue; fi
        if [ $file = "sttySettings.tty" ]; then continue; fi
        if [ $file = "setConf.sh" ]; then continue; fi
        if [ $file = "SIM_LOCK" ]; then continue; fi
	if [ $file = "gitV1" ]; then continue; fi
	if [ $file = "gitV2" ]; then continue; fi
        #print config
        echo -n $file" "
        cat /KWH/datalogger/config/defaults/$file
	echo ""
    done
}


# this is for cron
shopt -s expand_aliases 

# adding /datalogger to PATH envvar
export PATH=$PATH:/KWH/datalogger
