#!/usr/bin/env python
#from file import function
import re
import subprocess
import string
import sys

# Load environment variables
execfile("/KWH/datalogger/conf/pyvars.py")
DEBUG = int(DEBUG)

# Setup local variables
delFile ="/KWH/datalogger/transceive/sms/smsDel.sh"
smsReadFile = "/KWH/datalogger/transceive/sms/smsRead.sh"
printOn = 1
useful = []

# Read sms from sim memory into read.txt
p = subprocess.Popen(smsReadFile)
# Wait for smsRead to complete
p.communicate()
# Open read.txt with fresh SMS memory contents
fileName = open('read.txt', "r")

# Read in line by line
for line in fileName:
    lineIn = line.split()
    count  = 0 
    for element in lineIn:
        count = count + 1
    if count != 0:
        useful.append(lineIn)

if printOn == 1:
    print ("The first pass: ")
    print useful
    
keep = []
parsing = []
for item in useful:
    if item[0] == "+CMGL:":
        parsing.append(item)
    else:
        keep.append(item)


if printOn ==1:
    print("The 'Parsing' list holds: ")
    print(parsing)
    print(" ")
    print(" The 'Keep' list holds: ")
    print(keep)
    print(" ")
    
phoneNumbers = []
messageNumbers = []
messages = []


messages = keep[0:len(keep)-1] #For some reason, the last element is showing as "ok"


if printOn == 1:
    print(" The 'messages' list holds: ")
    print(messages)
    print(" ")
    

for item in parsing:
    messageNumbers.append(item[1])
    phoneNumbers.append(item[2])

#Lists will keep the order, so
# if you need to access a certain element
# you can access by element number

mn = ""
messNum = []
for item in messageNumbers:
    for char in item:
        #print(char)
        if char == "'":
            #do nothing
            #Skip this one
            print(" Nothing ")
        if char == ',':
            break
        else:
            messNum.append(char)

print("\n")
#FINAL LIST OF MESSAGE NUMBERS
print("Message Numbers: ", messNum)

#Now finish parsing the phone numbers
phoneNums = []
for item in phoneNumbers:
    phoneNums.append(item[8:20])

print("\n")
#FINAL LIST OF PHONE NUMBERS        
print("Phone Numbers: ", phoneNums)        

print("\n")
#FINAL LIST OF MESSAGES
print("Messages", messages)

print("\n")                      

#if the message contents are not useful, then delete the message...
#TEST -- delete message number 2...


# Run through the elements in the messages list
#and determine whether the message is valid
#if it is, move to the next item
#if it is not, delete it from the list -- update messageNum
#to that value so it can be deleted

reset = re.compile(r"\w*\s*(\d{4})#RESET#\s*\w*") #group 1 
baseStation = re.compile(r"\w*\s*(\d{4})#BST:(\d{5})#\s*\w*") #group 1 and 2
setInquiryPass = re.compile(r"\w*\s*(\d{4})#BPS:(\d{4}),(\d{4})#\s*\w*") #group 1, 2 and 3  
setServerDNS = re.compile(r"\w*\s*(\d{4})#GDN:(\d{13})!#\s*\w*") #group 1 and 2
setServerIP = re.compile(r"\w*\s*(\d{4})#GIA:(\d{3}.\d{3}.\d{3}.\d{3})!#\s*\w*") #group 1 and 2
setServerPort = re.compile(r"\w*\s*(\d{4})#GIP:(\d{1,5})#\s*\w*")#group 1 and 2
setupAPN = re.compile(r"\w*\s*(\d{4})#GAN:(\d{6})!#\s*\w*") #group 1 and 2
inquiryGSM = re.compile(r"\w*\s*(\d{4})#E1#\s*\w*") #group 1
setDigitalInputParams = re.compile(r"\w*\s*(\d{4})#(DIN[1-6]):([0-4]),([0-1]{4}),([0-3]{6})#\s*\w*") #group 1, 2, 3, 4 and 5

setPulseCounter = re.compile(r"\w*\s*(\d{4})#(DIP[1-6]):(\d{8})#\s*\w*")#group 1, 2 and 3
analogIn = re.compile(r"\w*\s*(\d{4})#(ADN[0-1])(\d:[0-2]),(\d.\d{3}),(\d.\d\{3}),(\d.\d{3}),(\d.\d{3}),(\d.\d{3}),([0,1]{4}),([0-3]{6})#\s*\w*") #groups 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
tempAnalogIn = re.compile(r"\w*\s*(\d{4})#(ADN1[1,2]):([0-2]),(\d.\d{3}),(\d.\d{3}),([0-1]{4}),([0-3]{6})#\s*\w*")#groups 1, 2, 3, 4, 5, 6, 7
inquiryE2 = re.compile(r"\w*\s*(\d{4})#E2#\s*\w*")#group 1
inquiryEE = re.compile(r"\w*\s*(\d{4})#EE#\s*\w*")#group 1

#admPass = re.compile(

commandList = [reset, baseStation, setInquiryPass, setServerDNS, setServerIP, setServerPort, setupAPN, inquiryGSM, setDigitalInputParams, setPulseCounter, analogIn, tempAnalogIn, inquiryE2, inquiryEE] 



#File paths for processing
portPath = "/KWH/datalogger/transceive/sms/commands/port.sh"


i = 0
for item in messages:
    fullMessage = ' '.join(item)
    if printOn:
        print(fullMessage)
    for command in commandList:
        print(i)
        #print(command.search(fullMessage))
        match = command.search(fullMessage) 
        if match:
            #Keep it and break to check the next
            if printOn:
                print("Got a match!")
            #Process then delete

            #Execute the appropriate processing file
            if command == reset:
                print("reset")
            elif command == baseStation:
                print("base station")
               # if match.group(1) == PASSWORD --- Check that the administration password matches
               
            elif command == setInquiryPass:
                print("Set inquiry password")
            elif command == setServerDNS:
                print( " set server DNS: ")
            elif command == setServerIP:
                print("set server IP ")
            elif command == setServerPort:
                print(" set server port ")

                print("Group Check!!! ")
                print(match.group(1))
                print(match.group(2))
                print("")
                print("")
                print("The command is: ")
                #print(subStr)
                #Call the subprocess with the port.sh file
                subprocess.Popen([portPath,str(match.group(2))])
                


                
            elif command == setupAPN:
                print(" setup APN ")
            elif command == inquiryGSM:
                print("inquiry GSM")
            elif command == setDigitalInputParams:
                print("set digital input params")
            elif command == setPulseCounter:
                print(" set pulse counter")
            elif command == analogIn:
                print("analog in ")
            elif command == tempAnalogIn:
                print("temperature analog in ")
            elif command == inquiryE2:
                print("inquiry E2")
            else:
                print("inquiry EE")
            #First delete the item from the file (subprocess)
            ###subprocess.Popen([delFile,str(messNum[i])])                   

            #Then delete the message contents, message number and phone number from the lists
            # messages, messNum, phoneNums
            ###del messages[i]
            ###del messNum[i]
            ###del phoneNums[i]
            if printOn:
            ###    print(" Updated lists: ")
                print(" messages: ")
                print(messages)
                print(" message numbers: ")
                print(messNum)
                print(" phone numbers: ")
            
        else:
            #Delete it
            #subprocess.Popen([delFile,str(messNum[i])])
            print(" else place holder")
    i = i + 1


