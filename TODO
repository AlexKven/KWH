analyze server response and time stamp in a file
to look for missing time stamps

Finish pulse code to launch configured channels on boot - might axe pulse
code (or at least reduce channels) when modbus is working

Consider schmit trigger, opto-isolators, or other safety hardware

Add log cycling service to prevent filling the SD card, but still allow
simple logging via DEBUG config - make log retention configurable

setup SMS request for DEBUG and each log file so we can query logs remotely

Set up transmit to transmit data about used/available memory for graphing

Set up transmit to send data about bytes transmitted, so we can track our
data usage and associate it to cost.

Devise new server side TCPIP app so we can take advantage of a compressed
transmission instead of sending KP format ASCII and wasting data
This will also allow us to devise software retransmission of old data
and completely eliminate missed data packets

Consider rsync for sending the data and storing all data in a local 
graphite/influxdb instance

investigate other_code.txt

test installer.sh

create logdel alias - and sms command to do it remotely.

Figure out server data delay

Figure out server only keeping 1 day

Create email notification of data stopping, with another notification of it
restarting, and when restarting send X bytes based on data stopped window

boot TIME test set the time to 2027 for some reason, still some bugs

make program to build and interpret modbus commands

make sure pulse code is working for all 8 channels

Fix "command invalid" sms bug

have temp sensors get autosensed and created, bound to a TEMPx config
